@inject ShellNavigationManager NavigationManager


<Grid ColumnDefinitions="100" RowDefinitions="*, 1">
    <TapGestureRecognizer OnTapped="@(async(x) => await ProductTapped(Product))" />
    <GridCell Column="0" Row="0">
        @if (Product.Image is not null)
        {
            <Image HeightRequest="50" WidthRequest="50" Source="@Product.Image" Aspect="Aspect.AspectFill" />
        }
    </GridCell>
    <GridCell Column="1" Row="0">
        <StackLayout>
            <Label Text="@Product.Title" FontAttributes="FontAttributes.Bold" />

            @{
                var priceString = $"From: {Product.Price.ToString("C2")}";
                <Label Text="@priceString" />
            }
        </StackLayout>
    </GridCell>
    <GridCell Row="1" Column="0" ColumnSpan="2">
        <TackleStore.Clients.Components.Seperator />
    </GridCell>
</Grid>

@code {

        [Parameter] public Models.SearchResultItem Product { get; set; }


    protected async override Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();

      
    }

    private async Task ProductTapped(Models.SearchResultItem product)
    {
        await NavigationManager.NavigateToAsync($"/product/{product.Id}");
    }
}
